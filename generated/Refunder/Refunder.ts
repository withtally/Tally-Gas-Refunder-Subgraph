// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get depositor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class GasPriceChange extends ethereum.Event {
  get params(): GasPriceChange__Params {
    return new GasPriceChange__Params(this);
  }
}

export class GasPriceChange__Params {
  _event: GasPriceChange;

  constructor(event: GasPriceChange) {
    this._event = event;
  }

  get newGasPrice(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RefundableUpdate extends ethereum.Event {
  get params(): RefundableUpdate__Params {
    return new RefundableUpdate__Params(this);
  }
}

export class RefundableUpdate__Params {
  _event: RefundableUpdate;

  constructor(event: RefundableUpdate) {
    this._event = event;
  }

  get targetContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get identifier(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get isRefundable(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get validatingContract(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get validatingIdentifier(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }
}

export class RelayAndRefund extends ethereum.Event {
  get params(): RelayAndRefund__Params {
    return new RelayAndRefund__Params(this);
  }
}

export class RelayAndRefund__Params {
  _event: RelayAndRefund;

  constructor(event: RelayAndRefund) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get target(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get identifier(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get refundAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get recipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Refunder__refundablesResult {
  value0: boolean;
  value1: Address;
  value2: Bytes;

  constructor(value0: boolean, value1: Address, value2: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromFixedBytes(this.value2));
    return map;
  }
}

export class Refunder extends ethereum.SmartContract {
  static bind(address: Address): Refunder {
    return new Refunder("Refunder", address);
  }

  BASE_REFUND_TX_COST(): BigInt {
    let result = super.call(
      "BASE_REFUND_TX_COST",
      "BASE_REFUND_TX_COST():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_BASE_REFUND_TX_COST(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "BASE_REFUND_TX_COST",
      "BASE_REFUND_TX_COST():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  REFUND_OP_GAS_COST(): BigInt {
    let result = super.call(
      "REFUND_OP_GAS_COST",
      "REFUND_OP_GAS_COST():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_REFUND_OP_GAS_COST(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "REFUND_OP_GAS_COST",
      "REFUND_OP_GAS_COST():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxGasPrice(): BigInt {
    let result = super.call("maxGasPrice", "maxGasPrice():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxGasPrice(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxGasPrice", "maxGasPrice():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  refundables(param0: Address, param1: Bytes): Refunder__refundablesResult {
    let result = super.call(
      "refundables",
      "refundables(address,bytes4):(bool,address,bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromFixedBytes(param1)
      ]
    );

    return new Refunder__refundablesResult(
      result[0].toBoolean(),
      result[1].toAddress(),
      result[2].toBytes()
    );
  }

  try_refundables(
    param0: Address,
    param1: Bytes
  ): ethereum.CallResult<Refunder__refundablesResult> {
    let result = super.tryCall(
      "refundables",
      "refundables(address,bytes4):(bool,address,bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromFixedBytes(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Refunder__refundablesResult(
        value[0].toBoolean(),
        value[1].toAddress(),
        value[2].toBytes()
      )
    );
  }

  registry(): Address {
    let result = super.call("registry", "registry():(address)", []);

    return result[0].toAddress();
  }

  try_registry(): ethereum.CallResult<Address> {
    let result = super.tryCall("registry", "registry():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  relayAndRefund(target: Address, identifier: Bytes, arguments: Bytes): Bytes {
    let result = super.call(
      "relayAndRefund",
      "relayAndRefund(address,bytes4,bytes):(bytes)",
      [
        ethereum.Value.fromAddress(target),
        ethereum.Value.fromFixedBytes(identifier),
        ethereum.Value.fromBytes(arguments)
      ]
    );

    return result[0].toBytes();
  }

  try_relayAndRefund(
    target: Address,
    identifier: Bytes,
    arguments: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "relayAndRefund",
      "relayAndRefund(address,bytes4,bytes):(bytes)",
      [
        ethereum.Value.fromAddress(target),
        ethereum.Value.fromFixedBytes(identifier),
        ethereum.Value.fromBytes(arguments)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class InitCall extends ethereum.Call {
  get inputs(): InitCall__Inputs {
    return new InitCall__Inputs(this);
  }

  get outputs(): InitCall__Outputs {
    return new InitCall__Outputs(this);
  }
}

export class InitCall__Inputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }

  get owner_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get registry_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitCall__Outputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RelayAndRefundCall extends ethereum.Call {
  get inputs(): RelayAndRefundCall__Inputs {
    return new RelayAndRefundCall__Inputs(this);
  }

  get outputs(): RelayAndRefundCall__Outputs {
    return new RelayAndRefundCall__Outputs(this);
  }
}

export class RelayAndRefundCall__Inputs {
  _call: RelayAndRefundCall;

  constructor(call: RelayAndRefundCall) {
    this._call = call;
  }

  get target(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get identifier(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get arguments(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class RelayAndRefundCall__Outputs {
  _call: RelayAndRefundCall;

  constructor(call: RelayAndRefundCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetMaxGasPriceCall extends ethereum.Call {
  get inputs(): SetMaxGasPriceCall__Inputs {
    return new SetMaxGasPriceCall__Inputs(this);
  }

  get outputs(): SetMaxGasPriceCall__Outputs {
    return new SetMaxGasPriceCall__Outputs(this);
  }
}

export class SetMaxGasPriceCall__Inputs {
  _call: SetMaxGasPriceCall;

  constructor(call: SetMaxGasPriceCall) {
    this._call = call;
  }

  get gasPrice(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxGasPriceCall__Outputs {
  _call: SetMaxGasPriceCall;

  constructor(call: SetMaxGasPriceCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpdateRefundableCall extends ethereum.Call {
  get inputs(): UpdateRefundableCall__Inputs {
    return new UpdateRefundableCall__Inputs(this);
  }

  get outputs(): UpdateRefundableCall__Outputs {
    return new UpdateRefundableCall__Outputs(this);
  }
}

export class UpdateRefundableCall__Inputs {
  _call: UpdateRefundableCall;

  constructor(call: UpdateRefundableCall) {
    this._call = call;
  }

  get targetContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get identifier(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get isRefundable_(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }

  get validatingContract(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get validatingIdentifier(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class UpdateRefundableCall__Outputs {
  _call: UpdateRefundableCall;

  constructor(call: UpdateRefundableCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
